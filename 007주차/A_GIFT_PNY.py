'''
**순서도**

1. N, L, W, H 입력 받기
2. A 범위 지정 (0 ~ [L, W, H]의 최소값)
  * A의 최소 길이 = 0
  * A의 최대 길이 = 작은 박스가 큰 박스의 가장 짧은 변보다 클 수 없음 ∴ [L, W, H]의 최소값
3. 이진 탐색으로 A 값 구하기
  1. 중간값 m 구하기
  2. 중간값으로 들어갈 수 있는 박스의 개수 구하기
    * x = L//m, L 변에 들어갈 수 있는 박스의 개수
    * y = W//m
    * z = H//m
    * 박스 개수 O = x * y * z
  3. 박스의 개수가 O이 N보다 작으면 중간값이 너무 큰 것. 중간값을 이진 탐색의 최대치로 설정
  4. 그렇지 않으면 중간값을 이진 탐색의 최소치로 설정
  5. 위의 과정 계속 반복 후 최대치 반환 (최소치와 최대치가 가까운 값으로 수렴할 때 까지)
'''
# range(10~30) 일 때, 오류 // range(35), 정답
# 입력 받기
n, l, w, h = map(int, input().split())
# A 범위 지정
lower, upper = 0, min(l,w,h)

# 이진 탐색
for _ in range(35):
  # 중간값 m 구하기
  m = (lower + upper) / 2
  # 박스 개수 구하고 중간값을 최대치/최소치로 설정
  x = int(l//m)
  y = int(w//m)
  z = int(h//m)

  if x * y * z < n:
    upper = m
  else:
    lower = m

# 최대치 반환
print(upper)
